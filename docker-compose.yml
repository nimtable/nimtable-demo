# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
---
services:
  spark-iceberg:
    image: tabulario/spark-iceberg
    container_name: spark-iceberg
    build: spark/
    networks:
      iceberg_net:
    depends_on:
      - rest
      - minio
    volumes:
      - ./warehouse:/home/iceberg/warehouse
      - ./notebooks:/home/iceberg/notebooks/notebooks
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
    ports:
      - 8888:8888
      - 8080:8080
      - 10000:10000
      - 10001:10001
  rest:
    image: apache/iceberg-rest-fixture
    container_name: iceberg-rest
    networks:
      iceberg_net:
    ports:
      - 8181:8181
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
      - CATALOG_WAREHOUSE=s3://warehouse/
      - CATALOG_IO__IMPL=org.apache.iceberg.aws.s3.S3FileIO
      - CATALOG_S3_ENDPOINT=http://minio:9000
  minio:
    image: minio/minio
    container_name: minio
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=password
      - MINIO_DOMAIN=minio
    networks:
      iceberg_net:
        aliases:
          - warehouse.minio
    ports:
      - 9001:9001
      - 9000:9000
    command: ["server", "/data", "--console-address", ":9001"]
  mc:
    depends_on:
      - minio
    image: minio/mc
    container_name: mc
    networks:
      iceberg_net:
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc alias set minio http://minio:9000 admin password) do echo '...waiting...' && sleep 1; done;
      /usr/bin/mc rm -r --force minio/warehouse;
      /usr/bin/mc mb minio/warehouse;
      /usr/bin/mc anonymous set public minio/warehouse;
      tail -f /dev/null
      "
  nimtable-database:
    image: postgres:17
    container_name: nimtable-database
    networks:
      iceberg_net:
    environment:
      - POSTGRES_USER=nimtable_user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=nimtable
    volumes:
      - nimtable-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U nimtable_user -d nimtable"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
  nimtable:
    image: ghcr.io/nimtable/nimtable:nightly
    container_name: nimtable
    depends_on:
      nimtable-database:
        condition: service_healthy
    networks:
      iceberg_net:
    ports:
      - 8182:8182
    environment:
      - JAVA_OPTS=-Xmx2g -Xms512m
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
    configs:
      - source: nimtable-config.yaml
        target: /nimtable/config.yaml
  nimtable-web:
    image: ghcr.io/nimtable/nimtable-web:nightly
    container_name: nimtable-web
    depends_on:
      nimtable:
        condition: service_started
    networks:
      iceberg_net:
    ports:
      - 3000:3000
    environment:
      - JAVA_API_URL=http://nimtable:8182
      - DATABASE_URL=postgresql://nimtable_user:password@nimtable-database:5432/nimtable
volumes:
  nimtable-data:
configs:
  nimtable-config.yaml:
    content: |
      server:
        port: 8182
        host: 0.0.0.0
      admin:
        username: admin
        password: admin
      database:
        url: "jdbc:postgresql://nimtable-database:5432/nimtable"
        username: "nimtable_user"
        password: "password"
      catalogs:
        - name: "rest"
          type: "rest"
          uri: "http://rest:8181"
          warehouse: "s3://warehouse/"
          s3.endpoint: "http://minio:9000"
          s3.path-style-access: "true"
networks:
  iceberg_net:
